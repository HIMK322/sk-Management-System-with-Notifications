version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Database=TaskManagementDb;User Id=postgres;Password=postgres;
      - ConnectionStrings__RedisCache=redis:6379
      - Jwt__Key=your_very_secure_secret_key_here_at_least_32_characters
      - Jwt__Issuer=TaskManagementSystem
      - Jwt__Audience=TaskManagementSystemUsers
      - Jwt__ExpiryInMinutes=60
    networks:
      - task-management-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=TaskManagementDb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - task-management-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - task-management-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    command: redis-server --appendonly yes

  # Add Redis Commander as a web UI for Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - task-management-network
    depends_on:
      - redis

  # Add pgAdmin for PostgreSQL management
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - task-management-network

networks:
  task-management-network:
    driver: bridge

volumes:
  postgres_data: